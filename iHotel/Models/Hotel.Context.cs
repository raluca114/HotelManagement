//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace iHotel.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class HotelEntities : DbContext
    {
        public HotelEntities()
            : base("name=HotelEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Access> Accesses { get; set; }
        public virtual DbSet<Disponibility> Disponibilities { get; set; }
        public virtual DbSet<Facility> Facilities { get; set; }
        public virtual DbSet<Offer> Offers { get; set; }
        public virtual DbSet<Price> Prices { get; set; }
        public virtual DbSet<Room> Rooms { get; set; }
        public virtual DbSet<RoomFacility> RoomFacilities { get; set; }
        public virtual DbSet<RoomType> RoomTypes { get; set; }
        public virtual DbSet<Service> Services { get; set; }
        public virtual DbSet<User> Users { get; set; }
        public virtual DbSet<Reservation> Reservations { get; set; }
    
        public virtual int AddNewFacility(string facility, Nullable<bool> deleted)
        {
            var facilityParameter = facility != null ?
                new ObjectParameter("facility", facility) :
                new ObjectParameter("facility", typeof(string));
    
            var deletedParameter = deleted.HasValue ?
                new ObjectParameter("deleted", deleted) :
                new ObjectParameter("deleted", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddNewFacility", facilityParameter, deletedParameter);
        }
    
        public virtual int AddNewPrice(Nullable<long> price, Nullable<System.DateTime> check_in_date, Nullable<System.DateTime> check_out_date, Nullable<bool> deleted)
        {
            var priceParameter = price.HasValue ?
                new ObjectParameter("price", price) :
                new ObjectParameter("price", typeof(long));
    
            var check_in_dateParameter = check_in_date.HasValue ?
                new ObjectParameter("check_in_date", check_in_date) :
                new ObjectParameter("check_in_date", typeof(System.DateTime));
    
            var check_out_dateParameter = check_out_date.HasValue ?
                new ObjectParameter("check_out_date", check_out_date) :
                new ObjectParameter("check_out_date", typeof(System.DateTime));
    
            var deletedParameter = deleted.HasValue ?
                new ObjectParameter("deleted", deleted) :
                new ObjectParameter("deleted", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddNewPrice", priceParameter, check_in_dateParameter, check_out_dateParameter, deletedParameter);
        }
    
        public virtual int AddRoomType(string type, string image1, string image2, Nullable<int> capacity, Nullable<int> nr_of_rooms, Nullable<int> price_id, Nullable<bool> deleted)
        {
            var typeParameter = type != null ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(string));
    
            var image1Parameter = image1 != null ?
                new ObjectParameter("image1", image1) :
                new ObjectParameter("image1", typeof(string));
    
            var image2Parameter = image2 != null ?
                new ObjectParameter("image2", image2) :
                new ObjectParameter("image2", typeof(string));
    
            var capacityParameter = capacity.HasValue ?
                new ObjectParameter("capacity", capacity) :
                new ObjectParameter("capacity", typeof(int));
    
            var nr_of_roomsParameter = nr_of_rooms.HasValue ?
                new ObjectParameter("nr_of_rooms", nr_of_rooms) :
                new ObjectParameter("nr_of_rooms", typeof(int));
    
            var price_idParameter = price_id.HasValue ?
                new ObjectParameter("price_id", price_id) :
                new ObjectParameter("price_id", typeof(int));
    
            var deletedParameter = deleted.HasValue ?
                new ObjectParameter("deleted", deleted) :
                new ObjectParameter("deleted", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddRoomType", typeParameter, image1Parameter, image2Parameter, capacityParameter, nr_of_roomsParameter, price_idParameter, deletedParameter);
        }
    
        public virtual int AddService(string service_name, string service_price)
        {
            var service_nameParameter = service_name != null ?
                new ObjectParameter("service_name", service_name) :
                new ObjectParameter("service_name", typeof(string));
    
            var service_priceParameter = service_price != null ?
                new ObjectParameter("service_price", service_price) :
                new ObjectParameter("service_price", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddService", service_nameParameter, service_priceParameter);
        }
    
        public virtual int DeleteFacility(string facility)
        {
            var facilityParameter = facility != null ?
                new ObjectParameter("facility", facility) :
                new ObjectParameter("facility", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteFacility", facilityParameter);
        }
    
        public virtual int DeleteOffer(string offerName)
        {
            var offerNameParameter = offerName != null ?
                new ObjectParameter("offerName", offerName) :
                new ObjectParameter("offerName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteOffer", offerNameParameter);
        }
    
        public virtual int DeleteRoomType(string type)
        {
            var typeParameter = type != null ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteRoomType", typeParameter);
        }
    
        public virtual int DeleteService(string serviceName)
        {
            var serviceNameParameter = serviceName != null ?
                new ObjectParameter("serviceName", serviceName) :
                new ObjectParameter("serviceName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteService", serviceNameParameter);
        }
    
        public virtual ObjectResult<GetAllOffersWithDetails_Result> GetAllOffersWithDetails()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllOffersWithDetails_Result>("GetAllOffersWithDetails");
        }
    
        public virtual int GetAllReservations()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetAllReservations");
        }
    
        public virtual int GetAllReservationsForUser(Nullable<int> userID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("userID", userID) :
                new ObjectParameter("userID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetAllReservationsForUser", userIDParameter);
        }
    
        public virtual ObjectResult<string> GetAllRoomFacilities()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GetAllRoomFacilities");
        }
    
        public virtual ObjectResult<GetAllServices_Result> GetAllServices()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllServices_Result>("GetAllServices");
        }
    
        public virtual ObjectResult<GetAllTypesOfRoomsWithPrices_Result> GetAllTypesOfRoomsWithPrices()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllTypesOfRoomsWithPrices_Result>("GetAllTypesOfRoomsWithPrices");
        }
    
        public virtual int UpdateFacility(string facility, string newfacility)
        {
            var facilityParameter = facility != null ?
                new ObjectParameter("facility", facility) :
                new ObjectParameter("facility", typeof(string));
    
            var newfacilityParameter = newfacility != null ?
                new ObjectParameter("newfacility", newfacility) :
                new ObjectParameter("newfacility", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateFacility", facilityParameter, newfacilityParameter);
        }
    
        public virtual int UpdateOffer(string offerName, string newOfferName, string offerDescription, Nullable<int> roomTypeId, Nullable<int> priceId)
        {
            var offerNameParameter = offerName != null ?
                new ObjectParameter("offerName", offerName) :
                new ObjectParameter("offerName", typeof(string));
    
            var newOfferNameParameter = newOfferName != null ?
                new ObjectParameter("newOfferName", newOfferName) :
                new ObjectParameter("newOfferName", typeof(string));
    
            var offerDescriptionParameter = offerDescription != null ?
                new ObjectParameter("offerDescription", offerDescription) :
                new ObjectParameter("offerDescription", typeof(string));
    
            var roomTypeIdParameter = roomTypeId.HasValue ?
                new ObjectParameter("roomTypeId", roomTypeId) :
                new ObjectParameter("roomTypeId", typeof(int));
    
            var priceIdParameter = priceId.HasValue ?
                new ObjectParameter("priceId", priceId) :
                new ObjectParameter("priceId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateOffer", offerNameParameter, newOfferNameParameter, offerDescriptionParameter, roomTypeIdParameter, priceIdParameter);
        }
    
        public virtual int UpdateReservation(string state)
        {
            var stateParameter = state != null ?
                new ObjectParameter("state", state) :
                new ObjectParameter("state", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateReservation", stateParameter);
        }
    
        public virtual int UpdateRoom(string type, string newType, string newImage1, string newImage2, Nullable<int> newCapacity, Nullable<int> new_nr_of_rooms, Nullable<int> new_price_id, Nullable<bool> deleted)
        {
            var typeParameter = type != null ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(string));
    
            var newTypeParameter = newType != null ?
                new ObjectParameter("newType", newType) :
                new ObjectParameter("newType", typeof(string));
    
            var newImage1Parameter = newImage1 != null ?
                new ObjectParameter("newImage1", newImage1) :
                new ObjectParameter("newImage1", typeof(string));
    
            var newImage2Parameter = newImage2 != null ?
                new ObjectParameter("newImage2", newImage2) :
                new ObjectParameter("newImage2", typeof(string));
    
            var newCapacityParameter = newCapacity.HasValue ?
                new ObjectParameter("newCapacity", newCapacity) :
                new ObjectParameter("newCapacity", typeof(int));
    
            var new_nr_of_roomsParameter = new_nr_of_rooms.HasValue ?
                new ObjectParameter("new_nr_of_rooms", new_nr_of_rooms) :
                new ObjectParameter("new_nr_of_rooms", typeof(int));
    
            var new_price_idParameter = new_price_id.HasValue ?
                new ObjectParameter("new_price_id", new_price_id) :
                new ObjectParameter("new_price_id", typeof(int));
    
            var deletedParameter = deleted.HasValue ?
                new ObjectParameter("deleted", deleted) :
                new ObjectParameter("deleted", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateRoom", typeParameter, newTypeParameter, newImage1Parameter, newImage2Parameter, newCapacityParameter, new_nr_of_roomsParameter, new_price_idParameter, deletedParameter);
        }
    
        public virtual int UpdateService(string serviceName, string newServiceName, Nullable<int> newServicePrice)
        {
            var serviceNameParameter = serviceName != null ?
                new ObjectParameter("serviceName", serviceName) :
                new ObjectParameter("serviceName", typeof(string));
    
            var newServiceNameParameter = newServiceName != null ?
                new ObjectParameter("newServiceName", newServiceName) :
                new ObjectParameter("newServiceName", typeof(string));
    
            var newServicePriceParameter = newServicePrice.HasValue ?
                new ObjectParameter("newServicePrice", newServicePrice) :
                new ObjectParameter("newServicePrice", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateService", serviceNameParameter, newServiceNameParameter, newServicePriceParameter);
        }
    
        public virtual int DeletePrice(Nullable<int> price)
        {
            var priceParameter = price.HasValue ?
                new ObjectParameter("price", price) :
                new ObjectParameter("price", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeletePrice", priceParameter);
        }
    
        public virtual ObjectResult<GetAllPrices_Result> GetAllPrices()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllPrices_Result>("GetAllPrices");
        }
    
        public virtual int AddReservation(string name, string phone, Nullable<System.DateTime> checkIn, Nullable<System.DateTime> checkOut, string roomtype, string state)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var phoneParameter = phone != null ?
                new ObjectParameter("phone", phone) :
                new ObjectParameter("phone", typeof(string));
    
            var checkInParameter = checkIn.HasValue ?
                new ObjectParameter("checkIn", checkIn) :
                new ObjectParameter("checkIn", typeof(System.DateTime));
    
            var checkOutParameter = checkOut.HasValue ?
                new ObjectParameter("checkOut", checkOut) :
                new ObjectParameter("checkOut", typeof(System.DateTime));
    
            var roomtypeParameter = roomtype != null ?
                new ObjectParameter("roomtype", roomtype) :
                new ObjectParameter("roomtype", typeof(string));
    
            var stateParameter = state != null ?
                new ObjectParameter("state", state) :
                new ObjectParameter("state", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddReservation", nameParameter, phoneParameter, checkInParameter, checkOutParameter, roomtypeParameter, stateParameter);
        }
    
        public virtual int UpdateReservationStatus(string name, string state)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var stateParameter = state != null ?
                new ObjectParameter("state", state) :
                new ObjectParameter("state", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateReservationStatus", nameParameter, stateParameter);
        }
    }
}
